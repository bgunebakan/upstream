# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-07-30 10:49
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import procurement.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=50, verbose_name='Key')),
                ('value', models.CharField(max_length=50, verbose_name='Value')),
                ('type', models.IntegerField(choices=[(1, 'Text'), (2, 'Number'), (3, 'Array')], default=1, verbose_name='Type')),
            ],
            options={
                'ordering': ['key'],
                'verbose_name': 'Config',
                'verbose_name_plural': 'Configs',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Currency')),
                ('short_name', models.CharField(max_length=5, verbose_name='slug')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created date')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Notes')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timedate', models.DateTimeField(auto_now_add=True, verbose_name='Date-Time')),
                ('action', models.CharField(max_length=32, verbose_name='Action')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Supplier')),
                ('address', models.TextField(blank=True, max_length=200, null=True, verbose_name='Address')),
                ('phone_number1', models.CharField(blank=True, max_length=32, null=True, verbose_name='Phone')),
                ('web', models.CharField(blank=True, max_length=32, null=True, verbose_name='Web')),
                ('tax_id', models.CharField(blank=True, max_length=12, null=True, verbose_name='TAX id')),
                ('tax_office', models.CharField(blank=True, max_length=20, null=True, verbose_name='TAX Office')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created date')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
            },
        ),
        migrations.CreateModel(
            name='Tender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('no', models.CharField(blank=True, help_text='Tender no generated if you leave blank', max_length=32, null=True, unique=True, verbose_name='No')),
                ('approximate_price', models.FloatField(blank=True, default=0, null=True, verbose_name='Approximate Price')),
                ('apply_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Apply Date')),
                ('auction_date', models.DateField(blank=True, null=True, verbose_name='Auction Date')),
                ('auction_time', models.TimeField(blank=True, null=True, verbose_name='Auction Time')),
                ('auction_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Auction Location')),
                ('auction_price', models.FloatField(blank=True, default=0, null=True, verbose_name='Auction Price')),
                ('firm_location', models.IntegerField(choices=[(1, 'Domestic Firm'), (2, 'Overseas Firm ')], default=1, verbose_name='Firm Location')),
                ('auction_no', models.CharField(blank=True, max_length=32, null=True, verbose_name='Auction No')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='Contract Date')),
                ('bap_staff', models.CharField(blank=True, max_length=200, null=True, verbose_name='BAP personnel')),
                ('specification', models.FileField(blank=True, null=True, upload_to=procurement.models.SpecificationFileUpload('technical_specifications'), verbose_name='Technical Specification')),
                ('invoice', models.FileField(blank=True, null=True, upload_to=procurement.models.SpecificationFileUpload('invoice'), verbose_name='Invoice')),
                ('tenderapproval', models.FileField(blank=True, null=True, upload_to=procurement.models.SpecificationFileUpload('tenderapproval'), verbose_name='Tender Approval')),
                ('agreement', models.FileField(blank=True, null=True, upload_to=procurement.models.SpecificationFileUpload('agreement'), verbose_name='Agreement')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('published', models.BooleanField(default=False, verbose_name='Publish to Call for Tenders Page')),
                ('publish_notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('publish_status', models.CharField(blank=True, max_length=30, null=True, verbose_name='Publish Status')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created Date')),
                ('deleted', models.BooleanField(default=False)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.Currency', verbose_name='Currency')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='procurement.Supplier', verbose_name='Supplier')),
            ],
            options={
                'ordering': ['no'],
                'verbose_name': 'Tender',
                'verbose_name_plural': 'Tenders',
            },
        ),
        migrations.CreateModel(
            name='Tender_end_date',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timedate', models.DateField(verbose_name='Date-Time')),
                ('notify', models.BooleanField(default=True, verbose_name='E-mail notification')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.Tender', verbose_name='Tender')),
            ],
            options={
                'verbose_name': 'Tender Deadline',
                'verbose_name_plural': 'Tender Deadlines',
            },
        ),
        migrations.CreateModel(
            name='TenderContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('quantity', models.FloatField(default=0, verbose_name='Quantity')),
                ('price', models.FloatField(default=0, verbose_name='Unit Price')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created date')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.Currency', verbose_name='Currency')),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.Tender', verbose_name='Tender')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Tender Content',
                'verbose_name_plural': 'Tender Contents',
            },
        ),
        migrations.CreateModel(
            name='TenderOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm', models.CharField(max_length=50, verbose_name='Firm')),
                ('price', models.FloatField(default=0, verbose_name='Price')),
                ('vat', models.IntegerField(choices=[(1, 'VAT Included'), (2, 'VAT Excluded ')], default=2, verbose_name='VAT')),
                ('proposal_form', models.FileField(blank=True, null=True, upload_to=procurement.models.OfferFileUpload('proposal_form'), verbose_name='Proposal form ')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created date')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.Currency', verbose_name='Currency')),
                ('tender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.Tender', verbose_name='Tender')),
            ],
            options={
                'ordering': ['firm'],
                'verbose_name': 'Tender Offer',
                'verbose_name_plural': 'Tender Offers',
            },
        ),
        migrations.CreateModel(
            name='TenderStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Tender Status')),
                ('bgcolor', models.CharField(default='', help_text='<a target="_blank" href="http://basscss.com/v7/docs/background-colors/">Renk Se\xe7enekleri</a>', max_length=20, verbose_name='background')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created date')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Notes')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Tender Status',
                'verbose_name_plural': 'Tenders Status',
            },
        ),
        migrations.CreateModel(
            name='TenderType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('code', models.CharField(default='', max_length=10, verbose_name='Code')),
                ('icon', models.CharField(default='fa-wrench', help_text='<a target="_blank" href="http://fontawesome.com/icons">Icon Se\xe7enekleri</a>', max_length=20, verbose_name='Icon')),
                ('color', models.CharField(default='bg-yellow', help_text='<a target="_blank" href="http://basscss.com/v7/docs/background-colors/">Renk Se\xe7enekleri</a>', max_length=20, verbose_name='Color')),
                ('total', models.IntegerField(default=0, verbose_name='Total item')),
                ('last_tender_no', models.IntegerField(default=1, verbose_name='Last Tender No')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='create date')),
                ('description', models.TextField(blank=True, max_length=200, null=True, verbose_name='Notes')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Tender Type',
                'verbose_name_plural': 'Tender Types',
            },
        ),
        migrations.CreateModel(
            name='TravellingExpense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('surname', models.CharField(max_length=50, verbose_name='Surname')),
                ('institution', models.CharField(max_length=50, verbose_name='Institution')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Event Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Event End Date')),
                ('location', models.CharField(max_length=50, verbose_name='Event Location')),
                ('activity_report', models.FileField(blank=True, null=True, upload_to=procurement.models.UploadToPathAndRename('activity_report'), verbose_name='Activity Report')),
                ('price', models.FloatField(default=0, null=True, verbose_name='Price')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created date')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.Currency', verbose_name='Currency')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Travelling Expense',
                'verbose_name_plural': 'Travelling Expenses',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Unit name')),
                ('short_name', models.CharField(max_length=5, verbose_name='slug')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created date')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
            },
        ),
        migrations.AddField(
            model_name='tendercontent',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.Unit', verbose_name='Unit'),
        ),
        migrations.AddField(
            model_name='tender',
            name='tender_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.TenderStatus', verbose_name='Tender Status'),
        ),
        migrations.AddField(
            model_name='tender',
            name='tender_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.TenderType', verbose_name='Tender Type'),
        ),
        migrations.AddField(
            model_name='tender',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Personnel in charge'),
        ),
        migrations.AddField(
            model_name='log',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='procurement.Tender', verbose_name='Tender'),
        ),
        migrations.AddField(
            model_name='log',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
    ]
